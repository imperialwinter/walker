#define TAK

#include "general/standard_commands.h"

piece  base, antenna, elevator, fuckingpipes, doors1, rdoor2, rdoor3, rdoor4, ldoor2, ldoor3, ldoor4, arm1, arm2, arm3, bpt, fm;

static-var  isBuilding, isBuildingNow, randomSeed, isOpen;

#define SIG_ACTIVATE			2

#define SMOKEPIECE1 base
#define SMOKEPIECE2 antenna
#define SMOKEPIECE3 doors1
#define SMOKEPIECE4 base
#include "general/smokeunit_sws.h"

#define shield 1024+1

Sounds() {
	play-sound("imp_b_droidplant/fan_whoosh",6);
	#define fan 0
	play-sound("imp_b_droidplant/slam",25);
	#define slam 1
	play-sound("imp_b_droidplant/whir",60);
	#define whir 2
	play-sound("imp_b_droidplant/lid",25);
	#define lid 3
	play-sound("imp_b_droidplant/door",25);
	#define door 4
	play-sound("imp_b_droidplant/ambient1100",6);
	#define ambient 5
	play-sound("imp_b_droidplant/const1",25);
	#define const1 6
	play-sound("imp_b_droidplant/const2",25);
	#define const2 7
	play-sound("imp_b_droidplant/const3",25);
	#define const3 8
}

Open() {
	isOpen=1;
	move bpt to y-axis [0] now;
	get PLAY_SOUND(slam, 196608, 0, 0);
	move rdoor4 to x-axis [6.5] speed [100];
	move ldoor4 to x-axis [-6.5] speed [100];
	wait-for-move ldoor4 along x-axis;
	get PLAY_SOUND(slam, 196608, 0, 0);
	move rdoor3 to x-axis [13] speed [100];
	move ldoor3 to x-axis [-13] speed [100];
	wait-for-move ldoor3 along x-axis;
	get PLAY_SOUND(slam, 196608, 0, 0);
	move doors1 to y-axis [-130] speed [100];
}

Close() {
	get PLAY_SOUND(slam, 196608, 0, 0);
	move doors1 to y-axis [05] speed [100];
	wait-for-move doors1 along y-axis;
	get PLAY_SOUND(slam, 196608, 0, 0);
	move rdoor3 to x-axis [0] speed [100];
	move ldoor3 to x-axis [0] speed [100];
	wait-for-move ldoor3 along x-axis;
	get PLAY_SOUND(slam, 196608, 0, 0);
	move rdoor4 to x-axis [0] speed [100];
	move ldoor4 to x-axis [0] speed [100];
	wait-for-move ldoor4 along x-axis;
	isOpen=0;
}

BuildStarted(unitID) {
	var unitprog;
	isBuildingNow = TRUE;
	while(get UNIT_BUILD_PERCENT_LEFT(unitID)) {
		unitprog = get UNIT_BUILD_PERCENT_LEFT(unitID);
		if(unitprog == 20) {
			start-script Open();
		}
		sleep 100;
	}
	sleep 500;
	move bpt to y-axis [-100] now;
	sleep 3000;
	call-script Close();
}

BuildEnded(unitID) {
	isBuildingNow = FALSE;
}

ConstAnims() {
	var randsound;
	if(isBuildingNow and !isOpen) {
		randsound = rand(1,5);
		if(randsound == 1) {
			get PLAY_SOUND(const1, 196608, 0, 0);
		} if(randsound == 2) {
			get PLAY_SOUND(const2, 196608, 0, 0);
		} if(randsound == 3) {
			get PLAY_SOUND(const3, 196608, 0, 0);
		}
	}
}

BuildScript() {
	while(1) {
		if(isBuilding) {
			set BUGGER_OFF to 1;
			set YARD_OPEN to 1;
			set INBUILDSTANCE to 1;
			sleep rand(40,100) + randomSeed;
			start-script ConstAnims();
		}
		while(!isBuilding) {
			isBuildingNow = FALSE;
			sleep 500 + randomSeed;
			set BUGGER_OFF to 0;
			set YARD_OPEN to 0;
			set INBUILDSTANCE to 0;
		}
	}
}

Shields() {
	//turn fm to x-axis <90> now;
	while(1) {
		if(!isOpen) {
			emit-sfx shield from fm;
		}
		sleep 380;
	}
}

Create() {
	randomSeed = rand(20,50);
	set BUGGER_OFF to 0;
	set YARD_OPEN to 0;
	set INBUILDSTANCE to 0;
	isBuilding = FALSE;
	start-script BuildScript();
	start-script SmokeUnit_SWS();
	while(get BUILD_PERCENT_LEFT) { sleep 100; }
	start-script Shields();
}

QueryNanoPiece(piecenum) {
	piecenum = bpt;
}

QueryBuildInfo(piecenum) {
	piecenum = bpt;
}

Activate() {
	signal SIG_ACTIVATE;
	isBuilding = TRUE;
}

Deactivate() {
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	isBuilding = FALSE;
}

Killed(severity, corpsetype) {
}
